{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/scrapbook/2022/owners-file","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"owners file\"), mdx(\"p\", null, \"There seems to be an issue with the pr labeling \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../oss/automation\",\n    \"title\": \"automation\"\n  }, \"[[automation]]\"), \": automation is not picking up nested folders under directories with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../knative/networking\",\n    \"title\": \"networking\"\n  }, \"[[networking]]\"), \" owners files in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../knative/serving\",\n    \"title\": \"serving\"\n  }, \"[[serving]]\"), \" repo. could also be useful for the gh api queries to search on that label instead of iterating over owner files in the serving repo. will track it here\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#owners-file","title":"owners file"}]},"outboundReferences":[{"contextLine":"There seems to be an issue with the pr labeling [[automation]]: automation is not picking up nested folders under directories with [[networking]] owners files in the [[serving]] repo. could also be useful for the gh api queries to search on that label instead of iterating over owner files in the serving repo. will track it here","targetAnchor":null,"refWord":"automation","label":null,"target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"automation\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"848deb1a-a76b-56f3-b54b-68b992638692","fields":{"slug":"/oss/automation","title":"automation"}}}},{"contextLine":"There seems to be an issue with the pr labeling [[automation]]: automation is not picking up nested folders under directories with [[networking]] owners files in the [[serving]] repo. could also be useful for the gh api queries to search on that label instead of iterating over owner files in the serving repo. will track it here","targetAnchor":null,"refWord":"networking","label":null,"target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"networking\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"01d5a00e-3694-54b8-998c-9b294cb11802","fields":{"slug":"/knative/networking","title":"networking"}}}},{"contextLine":"There seems to be an issue with the pr labeling [[automation]]: automation is not picking up nested folders under directories with [[networking]] owners files in the [[serving]] repo. could also be useful for the gh api queries to search on that label instead of iterating over owner files in the serving repo. will track it here","targetAnchor":null,"refWord":"serving","label":null,"target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"serving\"), mdx(\"h2\", null, \"Knative serving runtime post Kubernetes Gateway API\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../contributions/questions\",\n    \"title\": \"questions\"\n  }, \"[[questions]]\"), \": what does Knative bring to the table post \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../kubernetes/gateway-api\",\n    \"title\": \"gateway-api\"\n  }, \"[[gateway-api]]\"), \"?\"), mdx(\"h3\", null, \"A: Knative Serving-as-a-runtime benefits (by \", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"https://github.com/evankanderson\"\n  }, \"evankanderson (Evan Anderson)\"), \", on 05-31):\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Revision management, and ability to roll back one or multiple releases.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mapping services to HTTP Routes is break-even\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Makes tagging / canary exposure on a different domain name easier\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Simplifies mixing of environment (cluster) with app template (workload manifiest)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For example, HTTPRoute has a hostnames field that needs to vary per-environment. Knative\\u2019s config-domain plus context-relative suffixes means you don\\u2019t need to override hostname per-environment\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For non-Java applications, automatic health checks. This may soon include automatically determining the port via /proc/net/tcp\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Safe shutdown (lame duck period) without needing user code involvement\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Safe (verified) deployment cutovers vs Gateway-API. (Not just the Ready problem, but also the clusters vs routes xDS services.)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This is an implementation detail, but we test to ensure this implementation detail works.\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For non-Flagger applications, refuses to roll out configurations that don\\u2019t become healthy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Improved scaling:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Concurrency-based scaling\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Scale to zero when desired\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"6s / 60s scaling window vs 1m / 5m for HPA.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Support for automatic HTTPS provisioning\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"c888609a-cab6-50f4-a9d8-5b2de534ea5e","fields":{"slug":"/knative/serving","title":"serving"}}}}],"inboundReferences":[{"contextLine":"- [ ] issue with the [[owners-file]] ♥‿♥","referrer":{"parent":{"id":"b69c49ce-54ba-5261-9056-e86c2ac69a36","fields":{"slug":"/contributions/inbox","title":"inbox"}}}}]},"fields":{"slug":"/scrapbook/2022/owners-file","title":"owners file"}}},"pageContext":{"id":"0bd9bd91-3eb4-554c-99e6-eceea3be11ba","refWordMdxSlugDict":{"automation":"oss/automation","networking":"knative/networking","serving":"knative/serving","questions":"contributions/questions","gateway-api":"kubernetes/gateway-api","gw-api-desc":"scrapbook/2022/gw-api-desc","gateway-et-al":"learning/gateway-et-al","ingress":"learning/ingress","service-mesh":"learning/service-mesh","envoy":"learning/envoy","kubernetes-networking":"learning/kubernetes-networking","tools":"programming/tools/vscode-extensions","Cluster Networking | Kubernetes":"knative/networking","envoy-gateway":"kubernetes/envoy-gateway","2022/gateway-api-beta":"scrapbook/2022/gateway-api-beta","net-gateway-api":"knative/net-gateway-api","knative-sandbox/net-gateway-api: Integration between Knative and service-apis (ingress v2) for Knative Ingress migration.":"knative/net-gateway-api","knative":"learning/knative","scrapbook-work-private/gateway-api-beta":"scrapbook/2022/gateway-api-beta","gateway-api-issues":"kubernetes/gateway-api-issues","v1.6":"contributions/v1.6","pr-reviews":"contributions/pr-reviews","ongoing":"knative/ongoing","scripts/README":"scripts/README","gh-queries":"scrapbook/2022/gh-queries","issue-triage":"contributions/issue-triage","support":"knative/support","net-certmanager":"knative/net-certmanager","inbox":"contributions/inbox","downstream":"oss/downstream","EA":"collaborators/EA","DP":"collaborators/DP","testing":"kubernetes/testing","net-contour":"knative/net-contour","net-kourier":"knative/net-kourier","owners-file":"scrapbook/2022/owners-file","contributor":"oss/contributor","working group":"oss/working-group","TOC":"oss/TOC","MF":"collaborators/MF","expenses":"corp/expenses","deferred":"contributions/deferred","productivity":"contributions/productivity","video":"learning/video","read":"learning/read","kubernetes-sigs/gateway-api: Repository for the next iteration of composite service (e.g. Ingress) and load balancing APIs.":"kubernetes/gateway-api"},"tocTypes":["sidebar"]}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}