{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/scrapbook/2022/TestVisibilitySplit-istio","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"TestVisibilitySplit Istio\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"issue: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/knative-sandbox/net-gateway-api/issues/185\"\n  }, \"TestVisibilitySplit with istio is not stable \\xB7 Issue #185 \\xB7 knative-sandbox/net-gateway-api\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"see: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"knative-features-gw-api-tests\",\n    \"title\": \"knative-features-gw-api-tests\"\n  }, \"[[knative-features-gw-api-tests]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"related: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"e2e-tests-net-gw-api\",\n    \"title\": \"e2e-tests-net-gw-api\"\n  }, \"[[e2e-tests-net-gw-api]]\"), \"\"))), mdx(\"p\", null, \"Notes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"networking conformance has its own alpha and beta features, and so does serving\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/knative/serving/search?q=enablebetafeatures\"\n  }, \"Search \\xB7 enablebetafeatures\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#testvisibilitysplit-istio","title":"TestVisibilitySplit Istio"}]},"outboundReferences":[{"contextLine":"- see: [[knative-features-gw-api-tests]]","targetAnchor":null,"refWord":"knative-features-gw-api-tests","label":null,"target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Knative features missing gateway api implementation\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/knative-sandbox/net-gateway-api/blob/main/hack/test-env.sh\"\n  }, \"hack/test-env.sh at main\")), mdx(\"h2\", null, \"e2e\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"tls:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/knative-sandbox/net-gateway-api/pull/316?w=1\"\n  }, \"Add support for TLS (conformance test passes) by evankanderson \\xB7 Pull Request #316 \\xB7 knative-sandbox/net-gateway-api\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"retry\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"httpoption\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"basics/http2\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"websocket\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"websocket/split\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"grpc,grpc/split\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"visibility/path\\\\\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"visibility\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"update\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"host-rewrite\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"needed for domain mapping, (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"--enable-beta\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://gateway-api.sigs.k8s.io/geps/gep-726/\"\n  }, \"GEP-726: Add Path Redirects and Rewrites - Kubernetes Gateway API\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/kubernetes-sigs/gateway-api/issues/726\"\n  }, \"GEP: Add Path Redirects and Rewrites \\xB7 Issue #726 \\xB7 kubernetes-sigs/gateway-api\"))))), mdx(\"h2\", null, \"conformance\"), mdx(\"h3\", null, \"Istio\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"visibility/split\")), mdx(\"h3\", null, \"Contour\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"basics/http2\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"websocket\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"websocket/split\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"grpc\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"grpc/split\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"host-rewrite\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"visibility/path\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"visibility\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"6f936221-f2f2-5ebe-bc40-0e7cb28d42d3","fields":{"slug":"/scrapbook/2022/knative-features-gw-api-tests","title":"Knative features missing gateway api implementation"}}}},{"contextLine":"- related: [[e2e-tests-net-gw-api]]","targetAnchor":null,"refWord":"e2e-tests-net-gw-api","label":null,"target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"fix net-gw-api e2e tests\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/knative/serving/runs/7152434512?check_suite_focus=true\"\n  }, \"Add filtering secret informer label for internal-encryption \\xB7 knative/serving@d4d5681\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"look at everything that the e2e action runs\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/knative/serving/blob/main/.github/workflows/kind-e2e.yaml\"\n  }, \"serving/kind-e2e.yaml at main \\xB7 knative/serving\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/knative/serving/blob/838305e4e47719006b954946acd597cb53e30a58/.github/workflows/kind-e2e.yaml#L124\"\n  }, \"serving/kind-e2e.yaml at 838305e4e47719006b954946acd597cb53e30a58 \\xB7 knative/serving \\xB7 GitHub\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"tip: comment out all other tests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"do not comment out these:\")))))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"        - ingress: kourier-tls\\n          ingress-class: kourier\\n          enable-tls: 1\\n\\n        - test-suite: runtime\\n          test-path: ./test/conformance/runtime/...\\n\\n        - test-suite: api\\n          test-path: ./test/conformance/api/...\\n\\n        - test-suite: e2e\\n          test-path: ./test/e2e\"))), mdx(\"p\", null, \"todo:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"find or get dave's profile script for setting up a kind cluster with metalb\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"build the code locally, run the tests in the docker container\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"add action teamate to the gh action while testing\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"run action against origin repo\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"also change the kind cluster setup in the action to do auditing (see kind website docs)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"in gke: turn on logging and monitoring (go to log viewer)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"create a script that I can curl and install things (ko, kubectl, etc)\")), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../2022/daily-logs/07-07\",\n    \"title\": \"07-07\"\n  }, \"[[07-07]]\"), \"\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../../knative/net-gateway-api\",\n    \"title\": \"net-gateway-api\"\n  }, \"[[net-gateway-api]]\"), \" automated test workflow needs to:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"call all conformance tests\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"have the conformance specific setup\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"install each vendor\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"call all e2e tests\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"have the conformance specific setup\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"install each vendor\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"might have to pass a flag indicating vendor if the vendor installation is different for e2e vs conformance\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"might need to make calls to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"./third_party\"), \" a relative path (using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\\"$(dirname $0)\\\"/\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"might just have to source \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"common/sh\"), \" in all files\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../../2022/daily-logs/07-08\",\n    \"title\": \"07-08\"\n  }, \"[[07-08]]\"), \"\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../../knative/net-gateway-api\",\n    \"title\": \"net-gateway-api\"\n  }, \"[[net-gateway-api]]\"), \" test scripts workflow:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"e2e tests:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"run by repository's GH action:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"action takes care of:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"setting up a cluster\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"configuring a Knative test environment (config + test/config and uploads test images)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"require installing gateway vendor configuration for that vendor's testing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"call the tests: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"./test/kind-e2e-${{ matrix.ingress }}.sh\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"run by prow job \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"integration-tests_net-gateway-api_main\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"job takes care of:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"setting up a cluster\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Note\"), \" require configuring a Knative test environment (config + test/config and uploads test images)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"require installing gateway vendor configuration for that vendor's testing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"call \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"./test/presubmit-tests.sh --integration-tests\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"runs all \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"./test/e2e-*tests.sh\"), \" scripts, in sequence.\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"run individual tests (against local cluster)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Note\"), \" require configuring a Knative test environment (config + test/config and uploads test images)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"require installing gateway vendor configuration for that vendor's testinhg\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"call \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"./test/e2e-contour-tests.sh\"), \"?\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"conformance tests:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"run by repository's GH action:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"action takes care of:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"setting up a cluster\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Note\"), \" require configuring a Knative test environment (config + test/config and uploads test images)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"require installing gateway vendor configuration for that vendor's testing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"call the tests: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"./test/kind-e2e-${{ matrix.ingress }}.sh\"))))))))))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"eb1401ec-4b2f-569c-badf-67612f2f2183","fields":{"slug":"/scrapbook/2022/e2e-tests-net-gw-api","title":"fix net-gw-api e2e tests"}}}}],"inboundReferences":[]},"fields":{"slug":"/scrapbook/2022/TestVisibilitySplit-istio","title":"TestVisibilitySplit Istio"}}},"pageContext":{"id":"1ca5ec56-1b47-56a7-9093-522255ecc39e","refWordMdxSlugDict":{"knative-features-gw-api-tests":"scrapbook/2022/knative-features-gw-api-tests","e2e-tests-net-gw-api":"scrapbook/2022/e2e-tests-net-gw-api","net-gateway-api":"knative/net-gateway-api","knative-sandbox/net-gateway-api: Integration between Knative and service-apis (ingress v2) for Knative Ingress migration.":"knative/net-gateway-api"},"tocTypes":["sidebar"]}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}