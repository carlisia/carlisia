{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/kubernetes/testing","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"testing\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sieve-project/sieve\"\n  }, \"sieve-project/sieve: Automated, Distributed Systems Testing for Kubernetes Controllers\"), \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools\",\n    \"title\": \"tools\"\n  }, \"[[tools]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/n3wscott/wahoo\"\n  }, \"n3wscott/wahoo: Conformance Result Viewer\"), \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tools\",\n    \"title\": \"tools\"\n  }, \"[[tools]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"like sockeye XD\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#testing","title":"testing"}]},"outboundReferences":[{"contextLine":"- [sieve-project/sieve: Automated, Distributed Systems Testing for Kubernetes Controllers](https://github.com/sieve-project/sieve) [[tools]]","targetAnchor":null,"refWord":"tools","label":null,"target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"tools\"), mdx(\"p\", null, \"vscode extensions to try\\nCodeMetrics\\nRegex Previewer\\nVersion Lens#\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"0057f7fd-a5f1-5dda-a473-2fb61d0ed30b","fields":{"slug":"/programming/tools/vscode-extensions","title":"tools"}}}},{"contextLine":"- [n3wscott/wahoo: Conformance Result Viewer](https://github.com/n3wscott/wahoo) [[tools]]","targetAnchor":null,"refWord":"tools","label":null,"target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"tools\"), mdx(\"p\", null, \"vscode extensions to try\\nCodeMetrics\\nRegex Previewer\\nVersion Lens#\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"0057f7fd-a5f1-5dda-a473-2fb61d0ed30b","fields":{"slug":"/programming/tools/vscode-extensions","title":"tools"}}}}],"inboundReferences":[{"contextLine":"- [Test Evan's net-contour PR to run tests locally - see gh action scrips as example to add metllb: Add nightly build to run e2e tests against Contour main by sunjayBhatia · Pull Request #728 · knative-sandbox/net-contour](https://github.com/knative-sandbox/net-contour/pull/728/files) - [[testing]] [[net-gateway-api]] ♥‿♥","referrer":{"parent":{"id":"b69c49ce-54ba-5261-9056-e86c2ac69a36","fields":{"slug":"/contributions/inbox","title":"inbox"}}}}]},"fields":{"slug":"/kubernetes/testing","title":"testing"}}},"pageContext":{"id":"3402ead4-c608-55fa-930d-7c88894f2504","refWordMdxSlugDict":{"tools":"programming/tools/vscode-extensions"},"tocTypes":["sidebar"]}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}